{"name": "LM_Tree_Growth_Lab_py", "extension": ".py", "course": "MPM01", "st_mode": 33204, "st_ino": 13100108, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 5592, "st_atime": 1759510061.1291246, "st_mtime": 1759493998.0, "st_ctime": 1759510056.328176, "st_birthtime": 1759493998.0, "st_blocks": 16, "st_blksize": 4096, "content": "## ## Load packages\n## import pandas as pd\n## import statsmodels.api as sm\n## import statsmodels.formula.api as smf\n## import matplotlib.pyplot as plt\n## import seaborn as sns\n## from statsmodels.stats.multicomp import pairwise_tukeyhsd\n\n## ## Load the data\n## d_trees = pd.read_csv(\"../../Datasets/TreesChamagne2017_Lab_modified.csv\",\n##                       sep = ';', decimal = ',')\n\n## # Rename variables because \".\" causes problems in python\n## d_trees.rename(columns = {'growth.rate': 'growth_rate'}, inplace = True)\n## d_trees.rename(columns = {'Density.tree.Class': 'Density_tree_Class'}, inplace = True)\n\n## ## Inspect the data\n## print(d_trees.info())\n## print(d_trees.head())\n\n## ## Clean figure object\n## plt.clf()\n## \n## ## Boxplot for growth rate by species\n## sns.boxplot(x = 'species', y = 'growth_rate', data = d_trees)\n\n## ## The following line of code is necessary when running line by line.\n## ## When compiling the PDF, it is not necessary\n## plt.show()\n\n## ## Fit a linear model: growth.rate ~ species\n## lm_trees_1 = smf.ols('growth_rate ~ species', data = d_trees).fit()\n## print(lm_trees_1.params)\n\n## ## Summary\n## print(lm_trees_1.summary())\n\n## ## Fit a null model: growth.rate ~ 1\n## lm_trees_0 = smf.ols('growth_rate ~ 1', data = d_trees).fit()\n## print(lm_trees_0.params)\n\n## ## Summary\n## print(lm_trees_0.summary())\n\n## ## Compare the two models\n## anova_comparison = sm.stats.anova_lm(lm_trees_0, lm_trees_1)\n## print(anova_comparison)\n\n## ## Check whether Oak and Spruce differ in terms of growth rates\n## # Filter dataset to include only Oak and Spruce\n## d_trees_filtered = d_trees[d_trees['species'].isin(['Oak', 'Spruce'])]\n## tukey_results = pairwise_tukeyhsd(endog = d_trees_filtered['growth_rate'].astype(float),\n##                                   groups = d_trees_filtered['species'])\n## \n## # Print summary\n## print(tukey_results)\n\n## ## Add Density.tree.Class and SiteID to the model\n## lm_trees_2 = smf.ols('growth_rate ~ species + Density_tree_Class + SiteID',\n##                      data = d_trees).fit()\n## print(lm_trees_2.summary())\n## ##\n## ## Check\n## print(lm_trees_2.model.formula)\n\n## ## Test the two newly added variables\n## anova_added_var = sm.stats.anova_lm(lm_trees_2, typ = 2)\n## anova_added_var_df = pd.DataFrame(anova_added_var)\n## print(anova_added_var_df)\n\n## ## SiteID wasn't correctly coded. We recode it.\n## \n## ## Add a factor version of SiteID\n## d_trees['SiteID_fac'] = d_trees['SiteID'].astype('category')\n\n## ## Update model to use SiteID.fac instead of SiteID\n## lm_trees_3 = smf.ols('growth_rate ~ species + Density_tree_Class + SiteID_fac',\n##                      data = d_trees).fit()\n## # print(lm_trees_3.summary())\n\n## ## Test the variables\n## anova_added_var2 = sm.stats.anova_lm(lm_trees_3, typ = 2)\n## anova_added_var2_df = pd.DataFrame(anova_added_var2)\n## print(anova_added_var2_df)\n\n## ## Add age to the model\n## lm_trees_4 = smf.ols('growth_rate ~ species + Density_tree_Class + SiteID_fac + age',\n##                      data = d_trees).fit()\n## # print(lm_trees_4.summary())\n\n## ## Global F-test\n## anova_global = sm.stats.anova_lm(lm_trees_4)\n## print(anova_global)\n\n## ## Check coefficient for age\n## # Get summary output as text\n## lm_trees_4_summary_text = lm_trees_4.summary().as_text()\n## \n## # Convert to list of lines\n## summary_lines = lm_trees_4_summary_text.split(\"\\n\")\n## \n## # Extract specific lines (equivalent to R's c(10,11,62))\n## selected_lines = [summary_lines[i] for i in [12, 13, 64]]\n## \n## # Print the selected lines\n## for line in selected_lines:\n##     print(line)\n\n## ## Compare two models\n## anova_comparison2 = sm.stats.anova_lm(lm_trees_0, lm_trees_4)\n## print(anova_comparison2)\n\n## ## Sequential sum of squares\n## lm_trees_4.model.formula\n## print(sm.stats.anova_lm(lm_trees_4))\n## ##\n## ## Let's move *species* at the end\n## lm_trees_4_again = smf.ols('growth_rate ~ Density_tree_Class + SiteID_fac + age + species',\n##                      data = d_trees).fit()\n## print(sm.stats.anova_lm(lm_trees_4_again))\n\n## # Tukey HSD test for species (i.e., testing all pairwise comparisons)\n## tukey_species = pairwise_tukeyhsd(endog = d_trees['growth_rate'].astype(float),\n##                                   groups = d_trees['species'],\n##                                   alpha = 0.05)\n## print(tukey_species)\n## ## Unfortunately, the plot doesn't seem to be as straightforward as in R\n\n## # Add interaction between age and species\n## lm_trees_5 = smf.ols('growth_rate ~ species + Density_tree_Class + SiteID_fac + age + age:species',\n##                      data = d_trees).fit()\n## # print(lm_trees_5.summary())\n## print(sm.stats.anova_lm(lm_trees_5))\n\n## plt.clf()\n## ## Visualise age effect over all data\n## g = sns.lmplot(x = 'age', y = 'growth_rate', data = d_trees,\n##                height = 4, aspect = 1, ci = 95)\n\n## plt.show()\n\n## plt.clf()\n## ## Visualise age effect for each species\n## g = sns.lmplot(x = 'age', y = 'growth_rate', data = d_trees, col = 'species',\n##                height = 4, aspect = 1, ci = 95)\n\n## plt.show()\n\n## print(lm_trees_1.summary())\n## print(sm.stats.anova_lm(lm_trees_1))\n\n## ## Relevel *species*\n## d_trees['species_relevelled'] = pd.Categorical(d_trees['species'],\n##                                                categories = ['Oak', 'Beech', 'Spruce', 'Larch'],\n##                                                ordered = True)\n## \n## lm_trees_1_relevelled = smf.ols('growth_rate ~ species_relevelled', data = d_trees).fit()\n## print(lm_trees_1_relevelled.summary())\n\n## print(sm.stats.anova_lm(lm_trees_1_relevelled))\n"}