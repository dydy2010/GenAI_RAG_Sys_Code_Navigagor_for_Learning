{"name": "continent_example", "extension": ".R", "course": "RB", "st_mode": 33204, "st_ino": 13091703, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 2186, "st_atime": 1759510075.5172696, "st_mtime": 1759492208.0, "st_ctime": 1759510073.4976673, "st_birthtime": 1759492208.0, "st_blocks": 8, "st_blksize": 4096, "content": "#### https://appsilon.com/r-rest-api/  \n\n \nlibrary(plumber) ## For API user friendly\nlibrary(dplyr) ## For filtering\nlibrary(ggplot2) ## For plotting\nlibrary(gapminder) ## For the dataset\n\ndata(\"gapminder\")\nsummary(gapminder)\n\n#* @apiTitle Countries\n#* @apiDescription Evolution of countries over the years\n\n\n#* Returns countries that satisfy condition\n#* @param in_continent In which continent do you want to search the countries?\n#* @param in_lifeExpGT Life expectancy greater than\n#* @param in_popGT Population greater than\n#* @get /countries\nfunction(in_continent, in_lifeExpGT, in_popGT) {\n  \n  gapminder %>%\n    filter(\n      year == 2007,\n      continent == in_continent,\n      lifeExp > as.numeric(in_lifeExpGT),\n      pop > as.numeric(in_popGT)\n    )\n  \n}\n\n\n\n#* Returns the life expectancy of a given country\n#* @param in_country which country?\n#* @get /life_expectancy\nfunction(in_country) {\n  \n  gapminder %>%\n    filter(\n      year == 2007,\n      country == in_country\n    )\n  \n}\n\n\n#* Returns a line plot of life expectancy for country\n#* @param in_country1 Country 1 to confront\n#* @param in_country2 Country 2 to confront\n#* @param in_title Chart title\n#* @get /plot\n#* @serializer contentType list(type='image/png')\nfunction(in_country1, in_country2, in_title) {\n  \n  subset <- gapminder %>%\n    filter(country == c(in_country1, in_country2))\n  plot <- ggplot(subset, mapping = aes(x = year, y = lifeExp, colour = country)) +\n    geom_point(mapping = aes(size = pop)) +\n    ggtitle(in_title)\n  \n  ## cannot directly render a ggplot, we need to save it\n  ## and then use readBin to print it\n  file <- \"plot.png\"\n  ggsave(file, plot) \n  readBin(file, \"raw\", n = file.info(file)$size)\n  \n}\n\n\n\n#* Returns most recent GDP (Gross Domestic Product) for a country\n#* @param in_country In which country?\n#* @param in_year starting from which year?\n#* @post /calculate_gdp\nfunction(in_country, in_year) {\n  \n  gdp <- gapminder %>%\n    filter(\n      year >= as.numeric(in_year),\n      country == in_country) %>%\n    summarize(gdp = pop * gdpPercap)\n  year <- gapminder$year[gapminder$year >= in_year & gapminder$country == in_country]\n  data.frame(year = year, GDP = gdp)\n  \n}\n\n\n\n\n\n"}