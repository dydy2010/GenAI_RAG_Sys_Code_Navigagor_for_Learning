{"name": "Transforming_coordinate_systems_CH", "extension": ".R", "course": "RB", "st_mode": 33204, "st_ino": 13091717, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 1081, "st_atime": 1759510075.5508997, "st_mtime": 1759492210.0, "st_ctime": 1759510073.458263, "st_birthtime": 1759492210.0, "st_blocks": 8, "st_blksize": 4096, "content": "library(sf)\nlibrary(ggplot2)\n\n \n## https://epsg.io/4326\n## WGS84 - World Geodetic System 1984, used in GPS \n## The units are degrees for this CRS and that what we need. \n## Both solutions are equivalent. \n\n## https://epsg.io/2056\n## CH1903+ / LV95\n## Define the EPSG code for EPSG:2056 then convert\n# target_epsg <- CRS(\"+init=epsg:2056\")\n\n## https://epsg.io/21781\n## CH1903 / LV03\n## Define the EPSG code for EPSG:21781 then convert\n\n## Example shape files:: CH1903 -> WGS84 \n\n## Load the shape files\nswiss_cantons <- st_read(\"files_maps_CH/G1K09.shp\") \n\n# swiss_cantons2 <- st_transform(swiss_cantons, \n#                                crs = \"+proj=longlat +datum=WGS84\")\nswiss_cantons2 <- st_transform(swiss_cantons, \n                               crs = 4326)\n\n\n## Example simple feature: WGS84 -> CH1903\n\n## Engelberg (global coordinate system)\ndf <- data.frame(lon = 8.41553, lat = 46.82262)\nsf_df <- st_as_sf(df, \n                  coords = c(\"lon\", \"lat\"), \n                  crs = 4326)\n\nswiss_cantons2 <- st_transform(sf_df, \n                               crs = 21781)\n\n"}