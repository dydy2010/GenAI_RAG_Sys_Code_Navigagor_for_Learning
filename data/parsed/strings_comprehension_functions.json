{"name": "strings_comprehension_functions", "extension": ".py", "course": "PDS", "st_mode": 33204, "st_ino": 13100605, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 2515, "st_atime": 1759510075.469073, "st_mtime": 1759494116.0, "st_ctime": 1759510073.4793937, "st_birthtime": 1759494116.0, "st_blocks": 8, "st_blksize": 4096, "content": "#%% string manipulation, list comprehension, functions\n# General hint: Check out the regular expressions package \"re\" in case you encounter problems of this kind. To focus on python basics, we do not use it in this exercise.\n\n#%% Start\nsentence = \"Hello, I am the first sentence, I am happy and I am strong.\"\n\n# Use str.split method to create a list of all elements separated by \" \"\n# OUT: ['Hello,', 'I', 'am', 'the', 'first', 'sentence,', 'I', 'am', 'happy', 'and', 'I', 'am', 'strong.']\n\n# Use list comprehension to add \"__\" to every entry of the word list\n\n# OUT: ['Hello,__', 'I__', 'am__', 'the__', 'first__', 'sentence,__', 'I__', 'am__', 'happy__', 'and__', 'I__', 'am__', 'strong.__']\n\n# Use str.replace to previously remove \",\" and \".\" to get a list of only the words\n\n# OUT: ['Hello', 'I', 'am', 'the', 'first', 'sentence', 'I', 'am', 'happy', 'and', 'I', 'am', 'strong']\n\n# Now you would like to keep punctuation marks as ',' and '.' as separate entries in the list\n# Write a function 'keep_punctuation_word_list', which takes a sentence, extracts \",\" and \".\" from sub-strings and adds them to the list of words at the right position.\n\n# OUT: ['Hello', ',', 'I', 'am', 'the', 'first', 'sentence', ',', 'I', 'am', 'happy', 'and', 'I', 'am', 'strong', '.']\n\n# Now you want to keep \"!\" and \"?\" as well as separate entries in the list\n# Modify your function: add an additional parameter (special_word_chars = [\",\", \".\"]), which contains all the characters which should be considered a word. -> here, pass the value [\".\", \",\", \"!\", \"?\"]. Modify the body of the function accordingly. Use the given sentence_two.\n\n# OUT: ['Hello', ',', 'I', 'am', 'the', 'second', 'sentence', '!', 'I', 'am', 'happy', 'as', 'well', ',', 'but', 'also', 'a', 'bit', 'confused', '.', 'How', 'about', 'you', '?']\n\nsentence_two = \"Hello, I am the second sentence! I am happy as well, but also a bit confused. How about you?\"\n\nspecial_chars =  [\".\", \",\", \"!\", \"?\"]\n\n# Now write a function 'put_sentence_together', which takes a list of string elements and returns one string correctly formatted as a sentence. Use \"\".join, list comprehension and an if else condition to add correct spacing. You can treat the first word separately, but you have to handle words contained in the special_chars list (above) separately.\n\n# OUT: Hello, I am the second sentence! I am happy as well, but also a bit confused. How about you?\n\nmy_list = keep_punctuation_word_list_special(sentence_two, special_chars)\nresult = put_sentence_together(my_list)\n"}