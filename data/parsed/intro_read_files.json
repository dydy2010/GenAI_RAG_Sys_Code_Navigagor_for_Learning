{"name": "intro_read_files", "extension": ".py", "course": "CIP", "st_mode": 33204, "st_ino": 13098508, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 2699, "st_atime": 1759510056.7607358, "st_mtime": 1759493740.0, "st_ctime": 1759510056.234412, "st_birthtime": 1759493740.0, "st_blocks": 8, "st_blksize": 4096, "content": "\"\"\"\nContent:\n- read different formats with paratmers\n- handle index\n- altering data frames\n- dimensions of data frames\n- read from web directly\n\"\"\"\n\n# intro in pandas: Read files\n\nimport pandas\n\n# we read from a CSV-File ...\n\ndf1 = pandas.read_csv(\"traffic.csv\")\n\n# we read from a Excel-File \"traffic.xlsx\":\ndf2 = __FILL_HERE__\n\n# we read from a JSON-File \"traffic.json\"\ndf3 = __FILL_HERE__\n\n# first line: header or no header?  Documentation look for parameter 'header'!\n\ndf4 = __FILL_HERE__\n\n# what's wrong?\ndf4 = pandas.read_csv(\"traffic.csv\", header = True)\n\n# ok: header = 2   or  header = [1,2,5] ... let's try:\n\ndf5 = pandas.read_csv(\"traffic.csv\", header = 2)\n\n# try to use => header = [ 2, 4, 5]\ndf6 = __FILL_HERE__\n\n# we go back to df2\n# 'Date' should be the 'index'  (row labels!!)\n\ndf2 = pandas.read_excel(\"traffic.xlsx\")\n\n# set a new index e.g. the column \"Date\":   (use 'set_index()')\n\n__FILL_HERE__\n\n# or put the column 'Day' as index:  (use 'set_index()')\n\n__FILL_HERE__\n\n# what is the dimensionality of a DataFrame\n# important command if we get some new data from e.g. an API\n# give out the  dimensionality of the DataFrame   (have a look in the docu for 'shape')\n\n__FILL_HERE__\n\n# distinguish between altering the existing dataframe, creating a new reference and creating a new object! (documentation .copy(), 'deepcopy') \n\ndf7 = df2.set_index(\"Day\")\n__FILL_HERE__                       # print out: df7\n__FILL_HERE__                       # print an empty line\n__FILL_HERE__                       # print out: df2     => compare with df7 ...! \n\n# open a csv-file with different delimiter  e.g. ','   or ';'\n# standard - delimiter for csv-files is ','\n\n# open the file \"traffic-commas.txt\" with standard delimiter ',': \n\ndf8 = pandas.read_csv(__FILL_HERE__)\n\n# open the file \"traffic-semi-colons.txt\" with not-standard delimiter ';'\n\ndf9 = pandas.read_csv(__FILL_HERE__)\n\n# download some data from different CSV-API's\n\n# for example: \n# http://www.sharecsv.com/s/9096d32f98aa0ac671a1cca16fa43be8/SalesJan2009.csv\n# https://www.who.int/tb/country/data/download/en/\n# https://extranet.who.int/tme/generateCSV.asp?ds=notifications    # a bigger data source\n\n# read data from a online link direct (!) in a DataFrame: \n\n# https://www.who.int/tb/country/data/download/en/   # start site\n# look for 'Global Tuberculosis Report' and 'Case notifications[2Mb] '\n\ndf11 = pandas.read_csv(__FILL_HERE__)\n\n# get some data from a 'json-source' 'direct' in a Dataframe as an example: \n# try to get 'Chuck Norris'-joke from e.g. 'http://api.icndb.com/jokes/random/10'\n\ndf12 = pandas.read_json(__FILL_HERE__)\n\n# Recommend :try out yourself: \n\n# https://next.json-generator.com/api/json/get/4yIPxvyGt\n"}