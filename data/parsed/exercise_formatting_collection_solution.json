{"name": "exercise_formatting_collection_solution", "extension": ".py", "course": "PDS", "st_mode": 33204, "st_ino": 13100515, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 1777, "st_atime": 1759510078.976275, "st_mtime": 1759494060.0, "st_ctime": 1759510077.7105687, "st_birthtime": 1759494060.0, "st_blocks": 8, "st_blksize": 4096, "content": "\n# Exercise Collection String Formatting - Solution\n\n#%% Exercise 01\n'''\nUse the f\"XXX\" syntax to produce the following print out:\nHello Andreas and Ramon!\n\nbased on the given varibles.\n'''\n\nvar1 = \"and\"\nvar2 = \"Andreas\"\nvar3 = \"!\"\nvar4 = \"Hello\"\nvar5 = \"Ramon\"\n\nprint(f\"{var4} {var2} {var1} {var5}{var3}\")\n\n#%% Exercise 02\n\n'''\nUse the \"XXX\".format() syntax to produce the following print out:\n\"My name is Giacomo, I am 10 years old, and I live in Padova.\"\nbased on the given dictionary. In the formatting call use:\n1) order based\n2) numbering based\n3) key word based\n4) dictionary key based\nversions to insert the variables.\n'''\n\ninsert_dict = {'name':'Giacomo', 'age':'10', 'city':'Padova'}\n\n#1)\nprint(\"My name is {}, I am {} years old, and I live in {}.\".format(insert_dict['name'], insert_dict['age'], insert_dict['city']))\n\n#2)\nprint(\"My name is {0}, I am {1} years old, and I live in {2}.\".format(insert_dict['name'], insert_dict['age'], insert_dict['city']))\n\n#3)\nprint(\"My name is {name}, I am {age} years old, and I live in {city}.\".format(name=insert_dict['name'], age=insert_dict['age'], city=insert_dict['city']))\n\n#4)\nprint(\"My name is {0[name]}, I am {0[age]} years old, and I live in {0[city]}.\".format(insert_dict))\n\n#%% Exercise 03\n'''\nYou are given list of n (even) numbers.\nWrite a program that prints for each pair [(first, last), (second, second last ), etc...] the following string:\nX times Y is: X*Y\nUse in place calculations to calculate the product directly in the string within the print statement.\n'''\n\nnumber_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nfor ind,elem in enumerate(number_list):\n    if ind+1 > len(number_list)/2:\n        break\n    first = elem\n    second = number_list[-(ind+1)]\n    print(f\"{first} times {second} is: {first * second}\")\n\n"}