{"name": "intro_slicing", "extension": ".py", "course": "CIP", "st_mode": 33204, "st_ino": 13098509, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 1347, "st_atime": 1759510056.219706, "st_mtime": 1759493740.0, "st_ctime": 1759510056.1253066, "st_birthtime": 1759493740.0, "st_blocks": 8, "st_blksize": 4096, "content": "\"\"\"\nContent:\n- loc \n- iloc \n\"\"\"\n\n# intro in pandas: Slicing DataFrame's\n\nimport pandas\ndf1 = pandas.read_csv(\"traffic.csv\")\n\n# slicing a DataFrame\n\n#########\n# loc\n#########\n\n# loc is 'label based' \n# NOTE: that contrary to usual python slices, both the start and the stop are included!\n\ndf13 = df1.loc[ __FILL_HERE__ ]    # loc [ 'row_label_slice'  , 'column_label_slice'  ]\n\n# slicing from 'Country' to 'Days'\n\ndf14 = df1.loc[ __FILL_HERE__ ]\n\n# NOTE: 'loc' is NOT an inplace operation\n# check yourself: df1 is NOT changed!\n\n# select only one 'value'\n# index = 3 / column = \"Clicks\"\n\ndf15 = df1.loc[ __FILL_HERE__ ]\n\n# select ALL rows from \"Clicks\"\ndf16 = df1.loc[ __FILL_HERE__ ]\n\n# NOTE: if the result is only one column or one row => the type is changed and the result is now a 'Series' object!\n# check yourself: \n\n__FILL_HERE__\n\n#########\n# iloc\n#########\n\n# index-loc => iloc, look for index (=rows)!\n# iloc is 'position based' \n\ndf17 = df1.iloc[  __FILL_HERE__  ]\n\n# we can also slice one index (=row)  Note: index '0'  is row '1'! \n# e.g. index = 6 / columns = 1 bis 4 \n\ndf18 = df1.iloc[ __FILL_HERE__ ]\n\n# question: What is the 'type' of the result in the last cell?\n\n__FILL_HERE__\n\n# ... and we can also select only one value:\n\ndf19 = __FILL_HERE__\n\n# is there also a 'mean' command in DataFrames?\n# use 'dir' to find out   \n\ndir(df1)\n\n"}