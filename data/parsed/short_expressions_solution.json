{"name": "short_expressions_solution", "extension": ".py", "course": "PDS", "st_mode": 33204, "st_ino": 13100601, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 1175, "st_atime": 1759510073.5399683, "st_mtime": 1759494116.0, "st_ctime": 1759510073.3281412, "st_birthtime": 1759494116.0, "st_blocks": 8, "st_blksize": 4096, "content": "\n# %% List Comprehension\n\n# Create a list containing the numbers from 11 to 26 using list comprehension and the range function.\n\nmylist = [elem for elem in range(11,27)]\n\n# Use conditional list comprehension to create a list 'even_list' containing each even number (%2 == 0) from your previous list\n\neven_list = [elem for elem in mylist if elem%2 == 0]\n\n\n# %% Lambda Expression\n\n# Define a lambda expression which returns True if a number is divisible by 3 and false if not. Use 'expr if expr else expr' syntax of the conditional statement. For this time, give the function a name \"divisible_by_3\".\n\ndivisible_by_3 = lambda x: True if x%3==0 else False\n\n# Use the defined lambda function to create a new list based on your 'even_list', containing only numbers divisible by 3\n\nd_list = [elem for elem in even_list if divisible_by_3(elem)]\n\n# %% Dict Comprehension\n\n# Use lambda functions and dict comprehension to create a dictionary consisting of\n# keys: numbers in 'even_list'\n# values: whether 98729 is divisible by key (-> True) or not (-> False)\n\ndivisible_by_key = lambda key: True if 9878990%key==0 else False\n\nmydict = {key:divisible_by_key(key) for key in even_list}\n"}