{"name": "Exercises_Loops_and_Conditions_Solution", "extension": ".py", "course": "PDS", "st_mode": 33204, "st_ino": 13100487, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 4448, "st_atime": 1759510074.1957254, "st_mtime": 1759494042.0, "st_ctime": 1759510073.3429437, "st_birthtime": 1759494042.0, "st_blocks": 16, "st_blksize": 4096, "content": "###################\n# Exercise 1\n###################\n\"\"\"\nWrite a python program that constructs the following pattern using a nested for loop:\n\n*\n**\n***\n****\n*****\n****\n***\n**\n*\n\nHINT: print(yourstring, end=\"\") -> the end parameter allows you to force python to stay on current line, compared to the default value of '\\n'.\n\"\"\"\n\nn = 5\nfor i in range(n):\n    for j in range(i):\n        print(\"* \", end=\"\")\n    print(\"\")\n\nfor i in range(n,0,-1):\n    for j in range(i):\n        print(\"* \", end=\"\")\n    print(\"\")\n\n\n###################\n# Exercise 2\n###################\n\"\"\"\nWrite a python program to count the number of even and odd numbers contained in a sequence of numbers.\nExample:\nnumbers = (1,2,3,4,5,6,7,8,9,10)\nOutput:\nNumber of even numbers: 5\nNumber of odd numbers: 5\n\"\"\"\n\nnum_seq =[1,2,3,4,5]\neven_counter = 0\nodd_counter = 0\n\nfor elem in num_seq:\n    if elem%2==0:\n        even_counter = even_counter + 1\n    else:\n        odd_counter = odd_counter + 1\n\n###################\n# Exercise 3\n###################\n\"\"\"\nWrite a Python program which takes two digits m (row) and n (column) as input and\ngenerates a two-dimensional structure (e.g. nested list). The value in the i-th row and j-th column \nshould be i*j.\nNote :\ni = 0, 1, \u2026 , m-1\nj = 0, 1, \u2026 , n-1\nInput Test Data - Rows = 3\nInput Test Data - Columns = 4\nExpected Result: [[0, 0, 0, 0], [0, 1, 2, 3], [0, 2, 4, 6]]\n\"\"\"\n\nrow_num = int(input(\"Input Test Data - Rows = \"))\ncol_num = int(input(\"Input Test Data - Columns: \"))\n# initialize the list with '0'\nresult_list = []\nfor row in range(row_num):\n    inner_list = []\n    for col in range(col_num):\n        c_value = row * col\n        inner_list.append(c_value)\n    result_list.append(inner_list)\nprint(result_list)\n\n###################\n# Exercise 4\n###################\n\"\"\"\nWrite a Python program to find all numbers between 200 and 500 (limits included) only containing even digits.\nCorrect solution: \n200,202,204,206,208,220,222,224,226,228,240,242,244,246,248,260,262,264,266,26\n8,280,282,284,286,288,400,402,404,406,408,420,422,424,426,428,440,442,444,446,\n448,460,462,464,466,468,480,482,484,486,488\n\"\"\"\ncandidates = range(200,501)\nresult = []\n\nfor number in candidates:\n    str_cand = str(number)\n    for elem in str_cand:\n        digit = int(elem)\n        if digit%2 == 0:\n            continue\n        else:\n            break\n    else:\n        result.append(int(str_cand))\n        \n###################\n# Exercise 5\n###################\n\"\"\"\nWrite a Python program to guess a number between 1 to 10.\nFirst: Use the predefined code block to create a random number\nSecond:\nThe user is prompted to enter a guess. If the guess is wrong a message\n\"to big\" or \"to small\" is printed to the console and the prompt (user\ninput) appears again until the guess is correct. If the guess is correct, \"Well guessed!\" will be printed and the program ends.\nExtension:\nThe number of trials should be prompted as well: \"Well done - you have tried it 4 times!\"\n\"\"\"\n\n# Code block to create a random number\nfrom random import randint\nrandom_number = randint(1,10)\n# End code block to create a random number\n\nguess_num = int(input(\"Guess a number between 1 and 10:\"))\nnumber_of_guesses = 1\nwhile random_number != guess_num:\n    if random_number > guess_num:\n        print(\"the number is too small\")\n    else: \n        print(\"the number is too big\")\n    guess_num = int(input(\"Next try:\"))\n    number_of_guesses = number_of_guesses + 1\nprint(\"Well guessed: the random number was correct!\")\nprint(\"It took you:\", number_of_guesses, \" guesses.\")\n\n\n###################\n# Exercise 6\n###################\n\"\"\"\nSuppose we wish to draw a Christmas tree.\nExample tree - desired height: 8\nThe result looks like:\n     x\n    xxx\n   xxxxx\n  xxxxxxx\n xxxxxxxxx\nxxxxxxxxxxx\n    xxx\n    xxx\n\nCreate a program that asks the user for the height of the Christmas tree (trunk excluded)\nand then draws the tree. The height of the trunk is always 2 and its width is 3 in case the entire height is > 5 or 1 in case the height is <= 5.\n\"\"\"\n \nheight = int(input(\"What is the height of your tree?:\"))\nif height > 5:\n    chunk_width = 3\nelse:\n    chunk_width = 1\n\n# head\nfor row in range(height):\n    for elem in range(height-row):\n        print(\" \", end=\"\")\n    print(\"*\"*(row+1) + \"*\"*(row))\n# trunk\nfor elem in range(2):\n    if chunk_width == 3:\n        print(\" \"*(height-1),end=\"\")\n        print(\"*\"*chunk_width)\n    else:\n        print(\" \"*height,end=\"\")\n        print(\"*\")\n    \n"}