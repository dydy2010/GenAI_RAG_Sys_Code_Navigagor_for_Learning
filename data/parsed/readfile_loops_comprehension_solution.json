{"name": "readfile_loops_comprehension_solution", "extension": ".py", "course": "PDS", "st_mode": 33204, "st_ino": 13100604, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 2075, "st_atime": 1759510073.6039214, "st_mtime": 1759494116.0, "st_ctime": 1759510073.2244797, "st_birthtime": 1759494116.0, "st_blocks": 8, "st_blksize": 4096, "content": "# %% read_file, loops, list comprehension\n\n# %% loops and dict comprehension\n# Create a list 'mylist' containing all whole numbers between 32 and 218, including the borders.\nmylist = list(range(32, 219))\n\n# Create a void dictionary 'mydict'. Iterate over your list using a for loop togehter with 'enumerate' and fill your dictionary according to the following scheme: keys: positions of the numbers in list, values: actual number at this position\n\nmydict = {}\nfor pos, elem in enumerate(mylist):\n    mydict[pos] = elem\n\n# Repeat the task using dict-comprehension syntax.\nmydict = {pos:elem for (pos,elem) in enumerate(mylist)}\n\n\n# Create a list with 100 random numbers between 1 and 100 (use package 'random'). Use dictionary comprehension to keep track of how many times (value) each present number (key) appears in the list.\n\nimport random\nmylist = [random.randint(1, 100) for _ in range(100)]\ncounter_dict = {number:mylist.count(number) for number in set(mylist)}\n\n# %% read_file, list comprehension\n\n# Read File using with open(), loop over your file with 'for line in file', use line.rstrip to remove trailing characters.  comprehension to create a list 'lines' containing every line ind the document as an element. Loop ove\n\nfile_path = \"./gpt_statement.txt\"\nlines = []\nwith open(file_path, \"r\") as file:\n    for line in file:\n        lines.append(line.rstrip())\n\n# Remove empty lines using a for loop by first counting occurrences (n) with list.count(elem) and then removing with list.remove(elem) n times\n\nn = lines.count('')\nfor elem in range(n):\n    lines.remove('')\n\n# Repeat the task, but use list comprehension in the definition of 'lines' and to remove the empty lines\n\nfile_path = \"./gpt_statement.txt\"\nwith open(file_path, \"r\") as file:\n    lines = [line.rstrip() for line in file]\nlines = [elem for elem in lines if len(elem) > 0]\n\n# Use the comprehension syntax to calculate the number of occurrences of \"ar\" on each line. The line number can be used as a key.\n\ncounter = {line_number:lines[line_number].count(\"ar\") for line_number in range(len(lines))}\n\n\n\n"}