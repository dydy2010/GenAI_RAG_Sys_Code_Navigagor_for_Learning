{"name": "intro_drop_columns_rows", "extension": ".py", "course": "CIP", "st_mode": 33204, "st_ino": 13098506, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 1393, "st_atime": 1759510075.4422624, "st_mtime": 1759493740.0, "st_ctime": 1759510073.528706, "st_birthtime": 1759493740.0, "st_blocks": 8, "st_blksize": 4096, "content": "\"\"\"\nContent:\n- drop content\n\"\"\"\n\n# intro in pandas: drop rows and colums in a DataFrame's\nimport pandas\ndf1 = pandas.read_csv(\"traffic.csv\")\n\n# to delete a row or a column use 'drop' command\n# Example: delete 'day'-column\n\ndf20 = __FILL_HERE__            # axis parameter '1' = columns //  '0' = index (=rows)\n\n# Example: delete the fifth row (fourth index)\n\ndf21 = __FILL_HERE__\n\n# remember all 'drop'-commands are NOT inplace \n# instead of use words like 'Day' to delete a column\n# we can also use the parameter 'columns'\n\n# like above:\n# df1.drop(\"Day\",1)                         # parameter '1' = columns //  '0' = index (=rows)\n\ndf22 = __FILL_HERE__         \n\n# use .columns for all column-names as a list\n__FILL_HERE__\n\n# use .index for all index-names in a list: \n__FILL_HERE__\n\n#############\n# Exercise\n#############\n# change the index[5] of df1 to 'myTest'  with the command 'rename()'\n# print the DataFrame \n# print now the name of index[5]\n\ndf23 = __FILL_HERE__\nindex_5 = __FILL_HERE__\n\n# print df23\n\n#################\n# Example (simple)\n#################\n\ndf1 = pandas.read_csv(\"traffic.csv\")\n\n# drop the third row of df1 and save the result in an new DataFrame df25\ndf25 = __FILL_HERE__\n\n# drop the first, third and the ninth row of df1 and save the result in df25\n# and drop the 'Country' and 'Day' columns as well\n# in one line of code  (admittedly: that is NOT always useful!)\n"}