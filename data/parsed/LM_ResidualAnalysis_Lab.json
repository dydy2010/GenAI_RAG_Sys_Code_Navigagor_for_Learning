{"name": "LM_ResidualAnalysis_Lab", "extension": ".R", "course": "MPM01", "st_mode": 33204, "st_ino": 13100114, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 3885, "st_atime": 1759510059.5441418, "st_mtime": 1759494000.0, "st_ctime": 1759510056.2902331, "st_birthtime": 1759494000.0, "st_blocks": 8, "st_blksize": 4096, "content": "## ----getDataCats-----------------------------------------\nd.cats <- read.csv(\"../../Datasets/Cats.csv\", header = TRUE,\n                   stringsAsFactors = TRUE)\n##\nhead(d.cats)\nstr(d.cats)\n\n\n## ----garphCAts, message=FALSE----------------------------\nlibrary(ggplot2)\nggplot(data = d.cats,\n       mapping = aes(y = Heart.weight,\n                     x = Body.weight)) +\n  geom_point() +\n  geom_smooth() +\n  facet_wrap(. ~ Sex)\n\n\n## ----catsLm----------------------------------------------\nlm.cats <- lm(Heart.weight ~ Body.weight * Sex, data = d.cats)\n\n\n## ----QQforCats-------------------------------------------\n## 1) store the residuals in d.cats\nd.cats$resid.lm.cats <- resid(lm.cats)\n##\n## 2) create the QQ-plot\nqqnorm(resid(lm.cats))\nqqline(resid(lm.cats))\n\n\n## ----installPlgraphics, eval=FALSE-----------------------\n# ## Install the package\n# install.packages(\"plgraphics\",\n#                  repos = \"http://R-forge.R-project.org\")\n\n\n## ----QQplotForCatsPlgraphics, message=FALSE--------------\nlibrary(plgraphics)\nplregr(lm.cats, \n       plotselect = c(default = 0,\n                      qq = 1),\n       xvar = FALSE)\n\n\n## ----TAplotCats, message=FALSE---------------------------\nggplot(mapping = aes(y = resid(lm.cats),\n                     x = fitted(lm.cats))) +\n  geom_abline(intercept = 0, slope = 0) +\n  geom_point() + \n  geom_smooth()\n\n\n## ----TACatsPlgraphics------------------------------------\nplregr(lm.cats, \n       plotselect = c(resfit = 3,\n                      default = 0,\n                      absresfit = 0),\n       xvar = FALSE)\n\n\n## ----HomoscedastictiyCats, message=FALSE-----------------\nggplot(mapping = aes(y = abs(resid(lm.cats)),\n                     x = fitted(lm.cats))) +\n  geom_abline(intercept = 0, slope = 0) +\n  geom_point() + \n  geom_smooth()\n\n\n## ----HomoscedasticityCatsPlgraphics----------------------\nplregr(lm.cats, \n       plotselect = c(default = 0,\n                      absresfit = 2),\n       xvar = FALSE)\n\n\n## ----GraphCatsRegrLines----------------------------------\nggplot(data = d.cats,\n       mapping = aes(y = Heart.weight,\n                     x = Body.weight)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(. ~ Sex)\n\n\n## ----CooksForCats----------------------------------------\n## 1) compute Cook's distance \ncooks.dist.cats <- cooks.distance(lm.cats)\n##\n## 2) plot it\nggplot(data = d.cats,\n       mapping = aes(y = Heart.weight,\n                     x = Body.weight,\n                     colour = cooks.dist.cats)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(. ~ Sex)\n\n\n## ----LeveraPlotCats--------------------------------------\nplot(lm.cats, which = 5)\n\n\n## ----PlotLMCatsLM----------------------------------------\nplot(lm.cats)\n\n\n## ----graphResVsSex---------------------------------------\nggplot(data = d.cats,\n       mapping = aes(y = resid.lm.cats,\n                     x = Sex)) +\n  geom_boxplot()\n\n\n## ----ResAgainstBody.weight, message=FALSE----------------\nggplot(data = d.cats,\n       mapping = aes(y = resid.lm.cats,\n                     x = Body.weight)) +\n  geom_point() +\n  geom_smooth()\n\n\n## ----ResAgainstBody.weightBySex, message=FALSE-----------\nggplot(data = d.cats,\n       mapping = aes(y = resid.lm.cats,\n                     x = Body.weight)) +\n  geom_point() +\n  geom_smooth() + \n  facet_wrap(. ~ Sex)\n\n\n## ----simNormalErrors-------------------------------------\nset.seed(7)\nx <- gl(n = 2, k = 50, labels = c(\"A\", \"B\"))\nerrors <- rnorm(n = 100, sd = 2)\ny <- rep(x = c(8,20), each = 50) + errors\nplot(y ~ x)\n\n\n## ----histY-----------------------------------------------\npar(mfrow = c(1,2))\nhist(y, breaks = 20)\nqqnorm(y)\nqqline(y)\n\n\n## ----QQForSimData----------------------------------------\nlm.sim <- lm(y ~ x)\nqqnorm(resid(lm.sim))\nqqline(resid(lm.sim))\n\n\n## ----sessionINfo, size='footnotesize'--------------------\nsessionInfo()\n\n"}