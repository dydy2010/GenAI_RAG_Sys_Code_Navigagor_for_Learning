{"name": "democode", "extension": ".R", "course": "RB", "st_mode": 33204, "st_ino": 13091704, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 2504, "st_atime": 1759510075.41596, "st_mtime": 1759492208.0, "st_ctime": 1759510073.4719195, "st_birthtime": 1759492208.0, "st_blocks": 8, "st_blksize": 4096, "content": "# plumber.R \nlibrary(plumber)\nlibrary(ggplot2)\n\n#* @apiTitle Basic examples API\n#* @apiDescription API showing basic examples\n\n\n# GET: This method is used to retrieve data from a server.\n# It sends a request with parameters appended to the URL. \n# It is often used for retrieving data that is already available on the server.\n# It is also useful when you want to perform a read-only operation that does not modify any data on the server.\n# \n# POST: This method is used to send data to a server to create or update a resource. \n# It sends a request with parameters included in the body of the request. \n# It is often used when you want to submit data to the server that will be stored or processed in some way.\n# \n# In summary, GET is used for retrieving data, while POST is used for submitting data.\n# Both methods have their own specific use cases, \n# and the choice of method depends on the specific requirements of your API.\n\n\n\n\n#* Return the sum of two numbers\n#* @param a The first number to add\n#* @param b The second number to add\n#* @post /sum\nfunction(a, b) {\n  \n  as.numeric(a) + as.numeric(b)\n  ## as.numeric is used because the entries in an API are all transformed into\n  ## character strings\n  \n}\n\n#* Return the sum of all the entered numbers\n#* @param vector list of numbers, separated by \",\"\n#* @post /sum_vectorized\nfunction(vector){\n  \n  ## The API takes all the entries as character strings.\n  x <- as.numeric(unlist(strsplit(vector, \",\")))\n  \n sum(x)\n  ## as.numeric is used because the entries in an API are all transformed into\n  ## character strings\n  \n}\n\n\n\n\n\n#* Plot a histogram\n#* @serializer png\n#* @get /histogram\nfunction(){\n  \n  d.pois <- rpois(100, lambda = 1)\n  hist(d.pois)\n  \n}\n\n\n\n#* Density plot\n#* @serializer contentType list(type='image/png')\n#* @get /densityPlot\nfunction(){\n  \n  d.pois <- data.frame(poisson = rpois(100, lambda = 1))\n  plot <- ggplot(d.pois, mapping = aes(x = poisson)) +\n    geom_density()\n  \n  file <- \"density_plot.png\"\n  ggsave(file, plot) ## cannot directly render a ggplot, we need to save it then use readBin to print it\n  readBin(file, \"raw\", n = file.info(file)$size)\n  \n}\n\n\n#* Echo back the input\n#* @param number The number for set.seed\n#* @post /Lottery\nfunction(number){\n  \n  set.seed(as.numeric(number))\n  sample(1:100, size = 5, replace = TRUE)\n  \n}\n\n\n\n#* Return the square root of a number \n#* @param number The number to whom we apply the square root\n#* @post /square_root\nfunction(number){\n  \n  sqrt(as.numeric(number))\n  \n}\n\n\n\n\n\n"}