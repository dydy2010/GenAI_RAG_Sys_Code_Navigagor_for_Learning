{"name": "challenge_plot", "extension": ".py", "course": "CIP", "st_mode": 33204, "st_ino": 13098526, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 1387, "st_atime": 1759510060.1920655, "st_mtime": 1759493748.0, "st_ctime": 1759510056.301583, "st_birthtime": 1759493748.0, "st_blocks": 8, "st_blksize": 4096, "content": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nmpl.rc('axes', titlesize=16)     # Title size\nmpl.rc('axes', labelsize=14)     # X and Y labels sizes\nmpl.rc('legend', fontsize=12)     # Legend font size\nimport seaborn as sns\nsns.set_palette(\"muted6\")\n\n# read data\ndf = pd.read_csv(\"https://gist.githubusercontent.com/curran/a08a1080b88344b0c8a7/raw/0e7a9b0a5d22642a06d3d5b9bcbad9890c8ee534/iris.csv\")\n\n# filter\nnumerical_df = df.select_dtypes(include=['number'])\nnumerical_cols = list(numerical_df.columns)\nquantile_column = \"sepal_width\"\nquantile_level = 0.2\n\npdf = df.copy()\npdf['quantile_flag'] = 0\nclass_upper_quantiles = pdf.groupby('species')[quantile_column].agg(lambda x: x.quantile(quantile_level))\n\nfor elem in pdf['species'].unique():\n    pdf.loc[((pdf['species'] == elem) & (pdf[quantile_column]>=class_upper_quantiles[elem])),'quantile_flag'] = 1\n\n# visualization\n\nax = sns.scatterplot(data=pdf,x='petal_width',y='petal_length', hue=\"species\", style=\"quantile_flag\")\nhandles, labels = ax.get_legend_handles_labels()  # Get current handles and labels\nnew_labels = [elem if elem != \"quantile_flag\" else 'marker type: quantile_flag' for elem in labels]\nlegend = ax.legend(handles,new_labels,title =\"Custom Legend\", title_fontsize=14,loc = 'upper left', bbox_to_anchor=(1,1))\nlegend.get_title().set_fontstyle('italic')\nplt.tight_layout()\nplt.show()\n"}