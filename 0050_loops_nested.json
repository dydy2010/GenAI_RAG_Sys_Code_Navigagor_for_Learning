{"name": "0050_loops_nested", "extension": ".ipynb", "course": "PDS", "st_mode": 33204, "st_ino": 13100484, "st_dev": 16777233, "st_nlink": 1, "st_uid": 501, "st_gid": 20, "st_size": 3510, "st_atime": 1759497181.2835336, "st_mtime": 1759494042.0, "st_ctime": 1759510073.5541735, "st_birthtime": 1759494042.0, "st_blocks": 8, "st_blksize": 4096, "content": "{\n \"cells\": [\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"# Nested Loops ... and more \"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"There are always tasks where you have to use nested loops.\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"The structure of a nested loop can look like this:\\n\",\n    \"\\n\",\n    \"`for [first iterating variable] in [outer loop]:        # outer loop\\n\",\n    \"    [do something]                                      # optional\\n\",\n    \"    for [second iterating variable] in [nested loop]:   # inner loop = nested loop\\n\",\n    \"        [do something]`\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**Example 1: Nested Loops** \\n\",\n    \"- You have to print out 5 asterisks (*) on 10 lines.\\n\",\n    \"- (Of course not with `print(\\\"*\\\" * 5)` ! :-))\\n\",\n    \"\\n\",\n    \"Such tasks can be solved with nested loops.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"def demo_nested_for():                 # this is a definition of a 'function' => in next lession more!\\n\",\n    \"    row = 10\\n\",\n    \"    col = 5\\n\",\n    \"\\n\",\n    \"    for r in range(1, row + 1):        # outer loop: solve your task for 10 rows\\n\",\n    \"        for c in range(1, col + 1):    # inner loop: on one row print 5 stars (*)\\n\",\n    \"            print(\\\"*\\\", end=\\\"\\\")\\n\",\n    \"        print()   \\n\",\n    \"         \\n\",\n    \"demo_nested_for()        \"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**Just for demo purposes:**\\n\",\n    \"\\n\",\n    \"We could programm the same task with a `while` loop!\\n\",\n    \"\\n\",\n    \"You have to decide for yourself - what is easier for you!\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"def demo_while_with_modulo():                 # this is a definition of a 'function' => in next lession more!\\n\",\n    \"    row = 10\\n\",\n    \"    col = 5\\n\",\n    \"    i = 1\\n\",\n    \"    while i <= row * col:\\n\",\n    \"        print(\\\"*\\\", end=\\\"\\\")\\n\",\n    \"        if i % col == 0:\\n\",\n    \"            print()\\n\",\n    \"        i += 1\\n\",\n    \"\\n\",\n    \"demo_while_with_modulo()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**Example 2: Nested Loops** \\n\",\n    \"- You have to print out the lists `num_list` and `alpha_list`\\n\",\n    \"- The result should look like this:\\n\",\n    \"\\n\",\n    \"1: a, b, c,\\\\\\n\",\n    \"2: a, b, c,\\\\\\n\",\n    \"3: a, b, c,\\\\\\n\",\n    \"4: a, b, c,\\\\\\n\",\n    \"5: a, b, c, \\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"num_list = [1, 2, 3, 4, 5]\\n\",\n    \"alpha_list = ['a', 'b', 'c']\\n\",\n    \"\\n\",\n    \"for number in num_list:\\n\",\n    \"    print(str(number) + \\\": \\\", end=\\\"\\\")    # end=\\\"\\\"  => no carrage retrun\\n\",\n    \"    for letter in alpha_list:\\n\",\n    \"        print(letter + \\\", \\\", end=\\\"\\\")\\n\",\n    \"    print()\\n\",\n    \"\\n\"\n   ]\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3 (ipykernel)\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.10.9\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 4\n}\n"}